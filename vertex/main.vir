# This function is the main/start function!
func main() : void [ bool, str, int ]
    ld.bool false // Yay for comments!
    set.loc 0
    ld.str ""
    set.loc 1
    ld.int 0
    set.loc 2
    
    ld.str "calling $System.Console.WriteLine(str):"
    call void $System.Console.WriteLine(str)
    
    ld.str "Hello, World!"
    call void $System.Console.WriteLine(str)
    
    ld.str ""
    call void $System.Console.WriteLine(str)
    
    ld.str "calling other(int, str):"
    call void $System.Console.WriteLine(str)
    
    ld.int 1
    ld.str "TheWord"
    call void other(int, str)
    
    ld.str ""
    call void $System.Console.WriteLine(str)
    
    ld.str "calling check_even(int):"
    call void $System.Console.WriteLine(str)
    
    ld.int 49276
    set.loc 2
    
    ld.loc 2
    call bool check_even(int)
    set.loc 0
    
    ld.str "Is it even? "
    call void $System.Console.Write(str)
    ld.loc 2
    call void $System.Console.Write(int)
    ld.str " | "
    call void $System.Console.Write(str)
    ld.loc 0
    call void $System.Console.WriteLine(bool)
    
    ld.str ""
    call void $System.Console.WriteLine(str)
    
    ld.str "calling final(int, str, bool):"
    call void $System.Console.WriteLine(str)
    
    ld.int 5
    
    ld.loc 0
    ld.bool true
    if.equ
        ld.str "AB"
    if.else
        ld.str "BA"
    if.end
    
    ld.loc 0
    call str final(int, str, bool)
    set.loc 1
    
    ld.loc 1
    call void $System.Console.WriteLine(str)
ret

func other(int, str) : void []
    ld.arg 0
    ld.int 1
    add
    ld.arg 1
    add
    call void $System.Console.WriteLine(str)
    
    ld.float -.45
    ld.float +4.45
    add
    call void $System.Console.WriteLine(float)
    
    /*
        Huzzah! For Block Comments!
    */
ret

func check_even(int) : bool []
    ld.arg 0
    ld.int 2
    mod
    ld.int 0
    
    if.equ
        ld.bool true
    if.else
        ld.bool false
        
        ld.str "Not even!"
        ld.str "First argument: int"
        throw $System.ArgumentException(str, str)
    if.end
ret

func final(int, str, bool) : str [ int, str ]
    ld.int 0
    set.loc 0
    ld.str ""
    set.loc 1
    
    ld.arg 0
    ld.int 2
    div
    set.loc 0
    
    ld.arg 2
    ld.arg 1
    add
    set.loc 1
    
    ld.loc 1
    ld.loc 0
    mul
    set.loc 1
    
    ld.loc 1
ret