std. ~ Prefix for all "Standard" Library packages.

env:
exit() -> vd ~ Exits the program.
pass() -> vd ~ Does nothing.
date() -> str ~ Returns the current date.
time() -> str ~ Returns the current time.

cst: ~ Casting operations for converting various types to other types.
to_bl(int) -> bl
to_bl(fl) -> bl
to_bl(str) -> bl
to_int(bl) -> int
to_int(fl) -> int
to_int(str) -> int
to_fl(bl) -> fl
to_fl(int) -> fl
to_fl(str) -> fl
to_str(bl) -> str
to_str(int) -> str
to_str(fl) -> str

opr:
neg(bl) -> bl ~ Negation of a bl (false -> true, true -> false).
neg(int) -> int ~ Negation of an int (5 -> -5).
neg(fl) -> fl ~ Negation of a fl (-0.3 -> 0.3).
to_dec(str) -> int ~ Converts a hexadecimal str to a decimal int ("0x20" -> 32).
to_hex(int) -> str ~ Converts a decimal int to a hexadecimal str (32 -> "0x20").
add(int, int) -> int ~ Adds values.
add(fl, fl) -> fl ~ Adds values.
sub(int, int) -> int ~ Subtracts values.
sub(fl, fl) -> fl ~ Subtracts values.
mul(int, int) -> int ~ Multiplies values.
mul(fl, fl) -> fl ~ Multiplies values.
div(int, int) -> int ~ Divides values.
div(fl, fl) -> fl ~ Divides values.
mod(int, int) -> int ~ Modulates values.
mod(fl, fl) -> fl ~ Modulates values.
pwb(int, int) -> fl ~ Raises an int to the power of another int.
pwb(fl, fl) -> fl ~ Raises an fl to the power of another fl.
rtb(int, int) -> fl ~ Finds the int root of another int.
rtb(fl, fl) -> fl ~ Finds the fl root of another fl.
lgb(int, int) -> fl ~ Finds the int logarithm of another int.
lgb(fl, fl) -> fl ~ Finds the fl logarithm of another fl.

cmp:
eq(bl, bl) -> bl ~ Checks if two values are equal.
eq(int, int) -> bl ~ Checks if two values are equal.
eq(fl, fl) -> bl ~ Checks if two values are equal.
eq(str, str) -> bl ~ Checks if two values are equal.
gt(int, int) -> bl ~ Checks if one value is greater than another.
gt(fl, fl) -> bl ~ Checks if one value is greater than another.
lt(int, int) -> bl ~ Checks if one value is less than another.
lt(fl, fl) -> bl ~ Checks if one value is less than another.
ge(int, int) -> bl ~ Checks if one value is greater than or equal to another.
ge(fl, fl) -> bl ~ Checks if one value is greater than or equal to another.
le(int, int) -> bl ~ Checks if one value is less than or equal to another.
le(fl, fl) -> bl ~ Checks if one value is less than or equal to another.

sfn:
len(str) -> int ~ Finds the length of a str.
chr(str, int) -> str ~ Finds the character at the specified index of a str.
emp(str) -> bl ~ Checks if a str is empty or whitespace.
cat(str, str) -> str ~ Concatenates/adds two strs.
rep(str, int) -> str ~ Repeats a str a specified number of times.
sub(str, int) -> str ~ Finds the substring from the specified index to the end of a str.
sub(str, int, int) -> str ~ Finds the substring from the specified index with a given length.
rem(str, int) -> str ~ Removes a portion of a str from the specified index to the end of the str.
rem(str, int, int) -> str ~ Removes a portion of a str from the specified index with a given length.

mth:
TODO: Implement this.

err:
inv_op() -> vd ~ Throws an invalid operation exception.
inv_op(str) -> vd ~ Throws an invalid operation exception with the given message.
arg(str) -> vd ~ Throws an argument exception with the given name of the argument.
arg_range(str) -> vd ~ Throws an argument out of range exception with the given name of the argument.

sio:
ln_str() -> str ~ Gets the standard newline str for the current environment/operating system.
clear() -> vd ~ Clears the Console window.
read() -> vd ~ Waits for a key to be pressed on the Console.
readln() -> str ~ Returns a line of user input from the Console.
write(str) -> vd ~ Writes a str to the Console.
writeln(str) -> vd ~ Writes a str and then a line break to the Console.

fio:
read(str) -> str ~ Reads from a file with the given path.
write(str, str) -> vd ~ Writes to a file with the given path with the specified contents.
writeln(str, str) -> vd ~ Writes to a file with the given path with the specified contents and then a line break.
dir_str() -> str ~ Returns the default directory separator for the current environment/operating system.
cur_dir() -> str ~ Returns the current operating directory.
combine(str, str) -> str ~ Combines two paths together.
exists(str) -> bl ~ Checks if a file exists.
dir_exists(str) -> bl ~ Checks if a directory exists.
path(str) -> str ~ Finds the full path to a file given a relative path.
dir_path(str) -> str ~ Finds the directory of a file given a relative path.
make(str) -> vd ~ Creates a file given a path.
make_dir(str) -> vd ~ Creates a directory given a path.
delete(str) -> vd ~ Deletes a file given a path.
delete_dir(str) -> vd ~ Deletes a directory given a path.